# Mosquitto Configuration for Multi-Tenant IoT Platform with MySQL Authentication
# File: /etc/mosquitto/mosquitto.conf

# Basic Mosquitto settings
persistence true
persistence_location /var/lib/mosquitto/
log_dest file /var/log/mosquitto/mosquitto.log
log_type error
log_type warning  
log_type notice
log_type information

# Connection settings
max_keepalive 300
max_connections 1000

# Security - disable anonymous access
allow_anonymous false

# Load the mosquitto-go-auth plugin
auth_plugin /usr/lib/mosquitto/mosquitto-go-auth

# Backend configuration - use MySQL
auth_opt_backends mysql

# MySQL Database Configuration
# UPDATE THESE WITH YOUR ACTUAL DATABASE DETAILS
auth_opt_mysql_host localhost
auth_opt_mysql_port 3306
auth_opt_mysql_user your-mysql-user
auth_opt_mysql_password your-mysql-password
auth_opt_mysql_dbname your-database-name

# MySQL Connection Settings
auth_opt_mysql_protocol tcp
auth_opt_mysql_connect_tries 5
auth_opt_mysql_max_life_time 120

# SQL Queries for Authentication and Authorization
# User authentication query - checks username and password (queries VIEW)
auth_opt_mysql_userquery SELECT password FROM mosquitto_users WHERE username = ? LIMIT 1

# Superuser check query - checks if user is admin (queries VIEW) 
auth_opt_mysql_superquery SELECT COUNT(*) FROM mosquitto_superusers WHERE username = ? AND is_superuser = 1

# ACL query - checks topic permissions (queries VIEW that combines user_acls + device_acls)
# ? parameters: 1=username, 2=access_type (1=read, 2=write, 3=readwrite, 4=subscribe)
auth_opt_mysql_aclquery SELECT topic FROM mosquitto_acls WHERE username = ? AND rw = ?

# Logging configuration
auth_opt_log_level info
auth_opt_log_dest file
auth_opt_log_file /var/log/mosquitto/auth.log

# Cache configuration (recommended for performance)
auth_opt_cache true
auth_opt_cache_type redis
auth_opt_cache_host localhost
auth_opt_cache_port 6379
auth_opt_cache_db 3
auth_opt_auth_cache_seconds 300
auth_opt_acl_cache_seconds 300

# Password hashing configuration (should match what you used in Python script)
auth_opt_hasher pbkdf2
auth_opt_hasher_algorithm sha512
auth_opt_hasher_iterations 100000
auth_opt_hasher_salt_size 16

# MQTT Listeners
# Standard MQTT
listener 1883 0.0.0.0
protocol mqtt

# MQTT over WebSockets  
listener 1884 0.0.0.0
protocol websockets

# Optional: MQTT over TLS (uncomment and configure certificates)
# listener 8883 0.0.0.0
# protocol mqtt
# cafile /etc/mosquitto/certs/ca.crt
# certfile /etc/mosquitto/certs/server.crt
# keyfile /etc/mosquitto/certs/server.key
# require_certificate false

# Optional: WebSockets over TLS
# listener 8884 0.0.0.0  
# protocol websockets
# cafile /etc/mosquitto/certs/ca.crt
# certfile /etc/mosquitto/certs/server.crt
# keyfile /etc/mosquitto/certs/server.key
# require_certificate false